/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/QWEp5mmJFkI
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import {
  Table,
  TableHeader,
  TableRow,
  TableHead,
  TableBody,
  TableCell,
  TableFooter,
} from '@/components/ui/table';
import { Button } from '@/components/ui/button';
import { FC } from 'react';
import Link from 'next/link';
import { cookiesClient } from '@/lib/amplify-utils';

interface TableRowProps {
  name: string;
  lastName: string;
  email: string;
  phone: string;
  id: string;
}
const Row: FC<TableRowProps> = ({ name, lastName, email, phone, id }) => {
  return (
    <TableRow>
      <TableCell className="font-medium">{name}</TableCell>
      <TableCell className="font-medium">{lastName}</TableCell>
      <TableCell>{email}</TableCell>
      <TableCell>{phone}</TableCell>
      <TableCell className="text-right">
        <Link href={`/owners/${id}/pets`}>
          <Button variant="outline" size="sm">
            <PawPrintIcon className="h-4 w-4 mr-2" />
            {`Ver mascotas`}
          </Button>
        </Link>
      </TableCell>
    </TableRow>
  );
};

export const OwnersTable = async () => {
  const { data: owners } = await cookiesClient.models.owner?.list();
  return (
    <div className="border rounded-lg w-[80%] mx-auto">
      <div className="relative w-full overflow-auto">
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>Nombres</TableHead>
              <TableHead>Apellidos</TableHead>
              <TableHead>Email</TableHead>
              <TableHead>Telefono</TableHead>
              <TableHead className="text-right">Acciones</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {owners?.length > 0 ? (
              owners?.map((owner: any) => (
                <Row
                  key={owner.id}
                  name={owner.name}
                  lastName={owner.lastName}
                  email={owner.email}
                  phone={owner.phone}
                  id={owner.id}
                />
              ))
            ) : (
              <TableRow>
                <TableCell colSpan={4} className="text-center">
                  No hay clientes
                </TableCell>
              </TableRow>
            )}
          </TableBody>
        </Table>
      </div>
    </div>
  );
};

function PawPrintIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="11" cy="4" r="2" />
      <circle cx="18" cy="8" r="2" />
      <circle cx="20" cy="16" r="2" />
      <path d="M9 10a5 5 0 0 1 5 5v3.5a3.5 3.5 0 0 1-6.84 1.045Q6.52 17.48 4.46 16.84A3.5 3.5 0 0 1 5.5 10Z" />
    </svg>
  );
}
